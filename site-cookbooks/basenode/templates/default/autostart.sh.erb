#!/bin/bash
#

DISABLE_FILE="/root/.ran_firstboot"

# If the node is restarted, don't rerun
if [ -e $DISABLE_FILE ]; then
        exit 0
fi

AUTOSTART=`curl -s http://169.254.169.254/latest/user-data | egrep '^:autostart: ' | cut -d ' ' -f 2`
if [ "$AUTOSTART" != "true" ]; then
	exit 0
fi

AUTOSTART_TERMINATE=`curl -s http://169.254.169.254/latest/user-data | egrep '^:autostart_terminate: ' | cut -d ' ' -f 2 | sed s/\"//g`

AUTOSTART_EMAIL=`curl -s http://169.254.169.254/latest/user-data | egrep '^:autostart_email: ' | cut -d ' ' -f 2 | sed s/\"//g`

touch $DISABLE_FILE

LOGFILE="<%= @log_file %>"
AUTOSTART_DIR="<%= @autostart_dir %>"
AUTOSTART_FILES=`ls $AUTOSTART_DIR/`

MAX_SCRIPT_TIME_SECS=<%= @max_script_time_secs %>

function run_script()
{
	SCRIPT="$1"

	$SCRIPT >> $LOGFILE 2>&1 &
	PID=$!

	ITER=0
	while [ $ITER -lt $MAX_SCRIPT_TIME_SECS ]; do
		if [ ! -e /proc/$PID ]; then
			wait $PID
			return $?
		fi

		sleep 1
		ITER=$(( $ITER + 1 ))
	done

	echo "ERROR: Timed out running: $SCRIPT" >> $LOGFILE
	kill -9 $PID > /dev/null
	wait $PID
	return 1
}

# Ensure the log file is not readable (may contain secrets)
touch $LOGFILE
chmod 0600 $LOGFILE

EXIT_STATUS=0
cd $AUTOSTART_DIR
for FILE in $AUTOSTART_FILES; do
	echo ">> Running autostart file $FILE" >> $LOGFILE

	run_script "$PWD/$FILE"
	if [ $? -ne 0 ]; then
		echo ">> Quitting autostart early due to failure" >> $LOGFILE
		EXIT_STATUS=1
		break
	fi
done

if [ $EXIT_STATUS -ne 0 ]; then
	if [ -n "$AUTOSTART_EMAIL" ]; then
		INSTANCE=`curl -s http://169.254.169.254/latest/meta-data/instance-id`
		sudo cat $LOGFILE | mailx -s "Failed to autostart node: $INSTANCE" $AUTOSTART_EMAIL

		# Give this time to deliver
		sleep 5
	fi

	# Kill the network interface (causing a status check failure)
	# if the autostart scripts don't complete.
	if [ "$AUTOSTART_TERMINATE" == "network" ]; then
		sudo /sbin/ifconfig eth0 down
	fi
fi

exit $EXIT_STATUS

# Local Variables:
# mode: sh
# End:
